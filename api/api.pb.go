// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto
	route.proto

It has these top-level messages:
	Request
	Response
	Point
	Rectangle
	Feature
	RouteNote
	RouteSummary
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type Request struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Age  int64  `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

// The response message containing the greetings
type Response struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "api.Request")
	proto.RegisterType((*Response)(nil), "api.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GreetingService service

type GreetingServiceClient interface {
	// Sends a greeting
	Say(ctx context.Context, in *Request, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type greetingServiceClient struct {
	cc *grpc.ClientConn
}

func NewGreetingServiceClient(cc *grpc.ClientConn) GreetingServiceClient {
	return &greetingServiceClient{cc}
}

func (c *greetingServiceClient) Say(ctx context.Context, in *Request, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/api.GreetingService/Say", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greetingServiceClient) SayHello(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/api.GreetingService/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GreetingService service

type GreetingServiceServer interface {
	// Sends a greeting
	Say(context.Context, *Request) (*google_protobuf.Empty, error)
	SayHello(context.Context, *Request) (*Response, error)
}

func RegisterGreetingServiceServer(s *grpc.Server, srv GreetingServiceServer) {
	s.RegisterService(&_GreetingService_serviceDesc, srv)
}

func _GreetingService_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetingServiceServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GreetingService/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetingServiceServer).Say(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreetingService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetingServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GreetingService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetingServiceServer).SayHello(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _GreetingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GreetingService",
	HandlerType: (*GreetingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _GreetingService_Say_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _GreetingService_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8e, 0x5f, 0x4b, 0xc3, 0x40,
	0x10, 0xc4, 0x49, 0x4e, 0x6c, 0xbb, 0xf8, 0x8f, 0x45, 0x34, 0xd4, 0x97, 0x52, 0x04, 0x0b, 0xc2,
	0x15, 0xed, 0x07, 0x10, 0x0a, 0xa2, 0x8f, 0x25, 0xf9, 0x04, 0xd7, 0x64, 0x3d, 0x0f, 0x72, 0xd9,
	0x33, 0x97, 0x0a, 0xf9, 0xf6, 0xe5, 0x72, 0xed, 0x4b, 0xde, 0x66, 0x86, 0xd9, 0x9d, 0x1f, 0xcc,
	0x94, 0x33, 0xd2, 0xb5, 0xdc, 0x31, 0x0a, 0xe5, 0xcc, 0xfc, 0x49, 0x33, 0xeb, 0x9a, 0xd6, 0x43,
	0xb4, 0x3f, 0xfc, 0xac, 0xc9, 0xba, 0xae, 0x8f, 0x8d, 0xe5, 0x07, 0x4c, 0x72, 0xfa, 0x3b, 0x90,
	0xef, 0xf0, 0x06, 0x52, 0x53, 0x65, 0xc9, 0x22, 0x59, 0xcd, 0xf2, 0xd4, 0x54, 0x88, 0x70, 0xd1,
	0x28, 0x4b, 0x59, 0x3a, 0x24, 0x83, 0xc6, 0x3b, 0x10, 0x4a, 0x53, 0x26, 0x16, 0xc9, 0x4a, 0xe4,
	0x41, 0x2e, 0x9f, 0x61, 0x9a, 0x93, 0x77, 0xdc, 0x78, 0xc2, 0x0c, 0x26, 0x96, 0xbc, 0x0f, 0x8d,
	0xf8, 0xe6, 0x6c, 0xdf, 0x35, 0xdc, 0x7e, 0xb5, 0x44, 0x9d, 0x69, 0x74, 0x41, 0xed, 0xbf, 0x29,
	0x09, 0x5f, 0x41, 0x14, 0xaa, 0xc7, 0x2b, 0x19, 0x70, 0x4f, 0x0c, 0xf3, 0x07, 0x19, 0x61, 0xe5,
	0x19, 0x56, 0x7e, 0x06, 0x58, 0x7c, 0x81, 0x69, 0xa1, 0xfa, 0x6f, 0xaa, 0x6b, 0x1e, 0x5d, 0x5c,
	0x9f, 0x5c, 0x44, 0xd8, 0xbe, 0xc1, 0x63, 0xc9, 0x56, 0xfe, 0x6e, 0x4a, 0x59, 0x29, 0xb2, 0xdc,
	0x48, 0xdd, 0xba, 0x32, 0x74, 0xb6, 0xf7, 0x23, 0x82, 0x5d, 0x98, 0xd8, 0x25, 0xfb, 0xcb, 0x61,
	0x6b, 0x73, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xe9, 0x1c, 0x28, 0x38, 0x01, 0x00, 0x00,
}
